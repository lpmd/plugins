
@include pairpotential

// This is the documentation for the plugin
@plugin lennardjones : "The lennardjones plugin implements the Lennard-Jones \
  pair potential. V(r) = 4*epsilon( (sigma/r)^12 - (sigma/r)^6 )"

@author "GNM <gnm.cl>"
@version 3.0

// These are the parameters recognized by the plugin
@parameter sigma (real) unit angstrom default 3.41 : "Parameter sigma"
@parameter epsilon (real) unit eV default 0.0103048 : "Parameter epsilon"
@parameter cutoff (real) unit eV default 8.5 : "Parameter cutoff"

// This is a fragment of a control file used as an example of the 
// typical usage of the plugin
@example
 use lennardjones as LJ1
     sigma 3.6
     epsilon 1.05e-02
     cutoff 9.0
 enduse
 potential Ar Ar LJ1
@end

// This is a unit test which will be executed by running 'lpmd -T lennardjones'
@test "Testing the Lennard-Jones potential"

 @beforetest
   # Initialization code (Python) for the test
   # should be placed here...
 @end

 @test
   # The code (Python) for the test itself
   # should be placed here...
 @end

 @aftertest
   # Clean-up code (Python) to be executed
   # after the test should be placed here...
 @end

@end

@function double PairEnergy (double r)
{
 double r6 = pow(sigma/r,6.0e0);
 return 4.0e0*epsilon*(r6*r6 - r6);
}

@function void PairForce (Vector r, Vector f)
{
 double rr2 = SquareModule(r);
 double r6 = pow(sigma*sigma/rr2, 3.0e0);
 double ff = -48.0e0*(epsilon/rr2)*(r6*r6 - 0.50e0*r6);
 VectorLoop { f = r*ff; }
}

