
@include pairpotential

// This is the documentation for the plugin
@plugin mcy : "The mcy plugin implements the Matsuoka, Clementi, and Yoshimine \
  pair potential. V(r) = A*exp(-B*r)-C*exp(-D*r)"

@author "GNM <gnm.cl>"
@version 3.0

// These are the parameters recognized by the plugin
@parameter A (real) unit eV default 0.001 : "Parameter A"
@parameter B (real) unit 1/angstrom default 2.5 : "Parameter B"
@parameter C (real) unit eV default 0.002 : "Parameter C"
@parameter D (real) unit 1/angstrom default 2.7 : "Parameter C"
@parameter cutoff (real) unit eV default 8.5 : "Parameter cutoff"

// This is a fragment of a control file used as an example of the 
// typical usage of the plugin
@example
 use mcy as MCY1
     A 0.0015
     B 2.4234
     C 0.0234
     D 2.4311
     cutoff 9.0
 enduse
 potential H O MCY1
@end

// This is a unit test which will be executed by running 'lpmd -T mcy'
@test "Testing the MCY potential"

 @beforetest
   # Initialization code (Python) for the test
   # should be placed here...
 @end

 @test
   # The code (Python) for the test itself
   # should be placed here...
 @end

 @aftertest
   # Clean-up code (Python) to be executed
   # after the test should be placed here...
 @end

@end

@function double PairEnergy (double r)
{
 return (A*exp(-B*r)-C*exp(-D*r));
}

@function void PairForce (Vector r, Vector f)
{
 double rr = Module(r);
 double ff = (1.0/rr)*(C*D*exp(-D*rr)-A*B*exp(-B*rr));
 VectorLoop { f = r*ff; }
}

